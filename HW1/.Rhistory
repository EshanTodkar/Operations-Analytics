setwd("C:/Users/eshan/Box/USA/UTD/Operations Analytics/Lecture 3")
#
# Make sure your working directory was set as "Source file location".
# Make sure your data files are in the same folder as this R script.
#
# install.packages(c("dplyr", "ggplot2", "GGally"))
library(dplyr)
library(ggplot2)
library(GGally)
# install.packages("car")
library(car) # for VIF
# Load data:
gas <- read.csv("data.csv")
gas <- gas %>%
mutate(POP=lag(POP), GASP=lag(GASP), INCOME=lag(INCOME), PNC=lag(PNC), PUC=lag(PUC), PPT=lag(PPT), PD=lag(PD), PN=lag(PN), PS=lag(PS))
# Data Pre-processing
gas <- gas %>%
mutate(POP=lag(POP), GASP=lag(GASP), INCOME=lag(INCOME), PNC=lag(PNC), PUC=lag(PUC), PPT=lag(PPT), PD=lag(PD), PN=lag(PN), PS=lag(PS)) %>%
na.omit()
# Examine data
str(gas)
View(gas)
ggplot(gas, aes(
x=YEAR,
y=GASEXP)
) +
geom_line() +
xlab("YEAR") +
ylab("US Gas Expenditure")
ggplot(gas, aes(
x=YEAR,
y=GASEXP)
) +
geom_point() +
xlab("YEAR") +
ylab("US Gas Expenditure")
gas.train <- filter(gas, YEAR <= 1993)
head(gas.train)
tail(gas.train)
gas.test <- filter(gas, YEAR > 1993)
mod.trend <- lm(GASEXP ~ YEAR,
data = gas.train)
summary(mod.trend)
# compute OSR^2
gasPredictions.trend <- predict(mod.trend, newdata=gas.test)
# this builds a vector of predicted values on the test set
SSE.trend = sum((gas.test$GASEXP - gasPredictions.trend)^2)
SST = sum((gas.test$GASEXP - mean(gas.train$GASEXP))^2)
OSR2.trend = 1 - SSE.trend/SST
# multiple linear regression model
#lm(y~x1+x2+...,data)
mod1 <- lm(GASEXP ~ .,
data = gas.train)
summary(mod1)
# compute OSR^2
gasPredictions <- predict(mod1, newdata=gas.test)
# this builds a vector of predicted values on the test set
SSE = sum((gas.test$GASEXP - gasPredictions)^2)
OSR2 = 1 - SSE/SST
# Confidence interval plot
ggcoef(
mod1,
vline_color = "red",
vline_linetype =  "solid",
errorbar_color = "blue",
errorbar_height = .25,
exclude_intercept = TRUE
)
# Plot scatter matrix
# density plots on the diagonal and correlation printed in the upper triangle
ggscatmat(gas, columns = 2:7, alpha = 0.8)
### Feature Selection for Interpretation ###
############################################
vif(mod1)
# A better model...
# Remove YEAR
mod2 <- lm(GASEXP ~ .-YEAR,
data = gas.train)
summary(mod2)
vif(mod2)
mod3 <- lm(GASEXP ~ .-PPT,
data = gas.train)
summary(mod3)
vif(mod3)
mod4 <- lm(GASEXP ~ .-PUC,
data = gas.train)
summary(mod4)
vif(mod4)
mod5 <- lm(GASEXP ~ .-POP,
data = gas.train)
summary(mod5)
vif(mod5)
mod5 <- lm(GASEXP ~ .-PD,
data = gas.train)
summary(mod5)
vif(mod5)
mod5 <- lm(GASEXP ~ .-YEAR -PN - PS - PD -PNC,
data = gas.train)
summary(mod5)
vif(mod5)
mod6 <- lm(GASEXP ~ .-YEAR -PN - PS - PD -PNC -INCOME,
data = gas.train)
summary(mod6)
vif(mod6)
mod7 <- lm(GASEXP ~ .-YEAR -PN - PS - PD -PNC -INCOME -PUC,
data = gas.train)
summary(mod7)
vif(mod7)
mod.final <- lm(GASEXP ~ .-YEAR -PN - PS - PD -PNC -PPT,
data = gas.train)
summary(mod.final)
vif(mod.final)
mod.final <- lm(GASEXP ~ .-YEAR -PN - PS - PD -PNC -PPT -INCOME -PUC,
data = gas.train)
summary(mod.final)
vif(mod.final)
gasPredictions.final <- predict(mod.final, newdata=gas.test)
SSE.final = sum((gas.test$GASEXP - gasPredictions.final)^2)
OSR2.final = 1 - SSE.final/SST
## Calculating the MSE, MAPE, MAD on the Test Set
MSE.trend = SSE.trend/nrow(gas.test)
MSE = SSE/nrow(gas.test)
MSE.final = SSE.final/nrow(gas.test)
MAD = mean(abs(gas.test$GASEXP - gasPredictions))
MAD.trend = mean(abs(gas.test$GASEXP - gasPredictions.trend))
MAD.final = mean(abs(gas.test$GASEXP - gasPredictions.final))
MAPE = mean(abs(gas.test$GASEXP - gasPredictions)/ gas.test$GASEXP) * 100
MAPE.trend = mean(abs(gas.test$GASEXP - gasPredictions.trend)/ gas.test$GASEXP) * 100
MAPE.final = mean(abs(gas.test$GASEXP - gasPredictions.final)/ gas.test$GASEXP) * 100
setwd("C:/Users/eshan/Box/USA/UTD/Operations Analytics/Homework/HW1")
gas <- read.csv("data.csv")
gas <- read.csv("gas.csv")
gas <- read.csv("gas.xlsx")
gas <- read.xlsx("gas.xlsx")
library(readxl)
gas <- read_excel("gas.xlsx")
view(gas)
library(car)
library(dplyr)
library(ggplot2)
library(GGally)
view(gas)
View(gas)
gas <- gas %>%
mutate(POP=lag(POP), GASEXP=lag(GASEXP), INCOME=lag(INCOME), PNC=lag(PNC), PUC=lag(PUC), YEAR=lag(YEAR), GASP=lag(GASP))
# Data Pre-processing
gas <- gas %>%
mutate(POP=lag(POP), GASEXP=lag(GASEXP), INCOME=lag(INCOME), PNC=lag(PNC), PUC=lag(PUC), YEAR=lag(YEAR), GASP=lag(GASP)) %>%
na.omit()
# Examine data
str(gas)
head(gas)
# split into training and test sets
gas.train <- filter(gas, YEAR <= 1993)
head(gas.train)
tail(gas.train)
gas.test <- filter(gas, YEAR > 1993)
# linear trend model/simple linear regression
mod.trend <- lm(GASEXP ~ YEAR,
data = gas.train)
summary(mod.trend)
# compute OSR^2
gasPredictions.trend <- predict(mod.trend, newdata=gas.test)
# this builds a vector of predicted values on the test set
SSE.trend = sum((gas.test$GASEXP - gasPredictions.trend)^2)
SST = sum((gas.test$GASEXP - mean(gas.train$GASEXP))^2)
OSR2.trend = 1 - SSE.trend/SST
# Confidence interval plot
ggcoef(
mod1,
vline_color = "red",
vline_linetype =  "solid",
errorbar_color = "blue",
errorbar_height = .25,
exclude_intercept = TRUE
)
# compute OSR^2
gasPredictions.trend <- predict(mod.trend, newdata=gas.test)
# this builds a vector of predicted values on the test set
SSE.trend = sum((gas.test$GASEXP - gasPredictions.trend)^2)
SST = sum((gas.test$GASEXP - mean(gas.train$GASEXP))^2)
OSR2.trend = 1 - SSE.trend/SST
View(gas.test)
View(gas)
View(gas.train)
# Forecasting gasoline expenditure for 2005
new_data <- data.frame(Year = 2005)
forecast_2005 <- predict(model, newdata = new_data)
# Forecasting gasoline expenditure for 2005
new_data <- data.frame(Year = 2005)
forecast_2005 <- predict(gasPredictions.trend, newdata = new_data)
# Forecasting gasoline expenditure for 2005
new_data <- data.frame(Year = 2005)
forecast_2005 <- predict(mod.trend, newdata = new_data)
# Forecasting gasoline expenditure for 2005
new_data <- gas.test(YEAR = 2005)
# Forecasting gasoline expenditure for 2005
new_data <- gas(YEAR = 2005)
# Forecasting gasoline expenditure for 2005
new_data <- data_frame(YEAR = 2005)
forecast_2005 <- predict(mod.trend, newdata = new_data)
cat("Forecasted gasoline expenditure in 2005:", forecast_2005, "\n")
library(readxl)
library(car)
library(dplyr)
library(ggplot2)
library(GGally)
gas <- read_excel("gas.xlsx")
View(gas)
gas <- gas %>%
mutate(POP=lag(POP), GASEXP=lag(GASEXP), INCOME=lag(INCOME), PNC=lag(PNC), PUC=lag(PUC), YEAR=lag(YEAR), GASP=lag(GASP))
# Data Pre-processing
gas <- gas %>%
mutate(POP=lag(POP), GASEXP=lag(GASEXP), INCOME=lag(INCOME), PNC=lag(PNC), PUC=lag(PUC), YEAR=lag(YEAR), GASP=lag(GASP)) %>%
na.omit()
# Examine data
str(gas)
head(gas)
# split into training and test sets
gas.train <- filter(gas, YEAR <= 1993)
head(gas.train)
tail(gas.train)
gas.test <- filter(gas, YEAR > 1993)
# linear trend model/simple linear regression
mod.trend <- lm(GASEXP ~ YEAR,
data = gas.train)
summary(mod.trend)
# compute OSR^2
gasPredictions.trend <- predict(mod.trend, newdata=gas.test)
# this builds a vector of predicted values on the test set
SSE.trend = sum((gas.test$GASEXP - gasPredictions.trend)^2)
SST = sum((gas.test$GASEXP - mean(gas.train$GASEXP))^2)
OSR2.trend = 1 - SSE.trend/SST
# Forecasting gasoline expenditure for 2005
new_data <- data_frame(YEAR = 2005)
forecast_2005 <- predict(mod.trend, newdata = new_data)
cat("Forecasted gasoline expenditure in 2005:", forecast_2005, "\n")
# Report the estimated values for 𝛽0 and 𝛽1. How do you interpret these two values?
# B0 = 6098.0385
# 𝛽0 represents the intercept of the regression line. It is the value of the dependent variable
# (gasoline expenditure) when the independent variable (Year) is zero.
# B1 = 3.1147
# (Slope of regression line)
# Report the R2 and OSR2. How do you interpret their meaning?
# R2 = 0.8898 (The coefficient of determination for the training data.)
# = OSR2 = 0.896 (The performance of the model on the test data.)
# Report the p-value associated with 𝛽1. How do you interpret this p-value?
# 𝛽1 P-Value = <2e-16. P-value is the level of statistical significance.
# Smaller p-values are better(p<0.05 to be significant).
setwd("C:/Users/eshan/Box/USA/UTD/Operations Analytics/Homework/HW1")
# Load data:
gas <- read_excel("gas.xlsx")
library(car)
library(dplyr)
library(ggplot2)
library(GGally)
library(readxl)
# Load data:
gas <- read_excel("gas.xlsx")
View(gas)
gas <- gas %>%
mutate(POP=lag(POP), GASEXP=lag(GASEXP), INCOME=lag(INCOME), PNC=lag(PNC), PUC=lag(PUC), YEAR=lag(YEAR), GASP=lag(GASP))
# Data Pre-processing
gas <- gas %>%
mutate(POP=lag(POP), GASEXP=lag(GASEXP), INCOME=lag(INCOME), PNC=lag(PNC), PUC=lag(PUC), YEAR=lag(YEAR), GASP=lag(GASP)) %>%
na.omit()
# Examine data
str(gas)
head(gas)
# split into training and test sets
gas.train <- filter(gas, YEAR <= 1993)
head(gas.train)
tail(gas.train)
gas.test <- filter(gas, YEAR > 1993)
# multiple linear regression model
#lm(y~x1+x2+...,data)
mod1 <- lm(GASEXP ~ .,
data = gas.train)
summary(mod1)
# compute OSR^2
gasPredictions <- predict(mod1, newdata=gas.test)
# this builds a vector of predicted values on the test set
SSE = sum((gas.test$GASEXP - gasPredictions)^2)
OSR2 = 1 - SSE/SST
### Feature Selection for Interpretation ###
############################################
vif(mod1)
# A better model...
# Remove YEAR
mod2 <- lm(GASEXP ~ .-YEAR,
data = gas.train)
summary(mod2)
vif(mod2)
# Remove YEAR, INCOME
mod2 <- lm(GASEXP ~ .-YEAR -INCOME,
data = gas.train)
summary(mod2)
vif(mod2)
# Remove YEAR, INCOME
mod3 <- lm(GASEXP ~ .-YEAR -INCOME,
data = gas.train)
summary(mod3)
vif(mod3)
# Remove YEAR
mod4 <- lm(GASEXP ~ .-YEAR -INCOME -PNC,
data = gas.train)
summary(mod4)
vif(mod4)
gasPredictions.final <- predict(mod4, newdata=gas.test)
SSE.final = sum((gas.test$GASEXP - gasPredictions.final)^2)
OSR2.final = 1 - SSE.final/SST
summary(gasPredictions.final)
